{"version":3,"file":"/packages/app-acl.js","sources":["app-acl/acl_common.js"],"names":[],"mappings":";;;;;;;;AAAA,mB;AACA,yB;;AAEA,sC;AACA,gB;AACA,oB;AACA,qC;AACA,2C;AACA,gB;AACA,gC;AACA,4E;AACA,4B;AACA,qB;AACA,oB;AACA,oB;AACA,e;AACA,gB;AACA,I;AACA,G;AACA,Y;AACA,I;;AAEA,0B;AACA,mB;AACA,yE;AACA,E;AACA,mD;AACA,gB;AACA,E;;AAEA,6B;AACA,uC;AACA,kB;AACA,oD;AACA,G;AACA,sB;AACA,gD;AACA,sB;AACA,uC;AACA,wD;AACA,yC;AACA,oC;AACA,iE;AACA,I;AACA,I;AACA,qC;AACA,wB;AACA,sC;AACA,Y;AACA,G;AACA,G;AACA,yC;AACA,oC;AACA,6D;AACA,E;AACA,G","sourcesContent":["var OVERRIDES = {};\nvar OVERRIDES_REGEX = {};\n\nvar isAllowed = function(actionName) {\n\tvar overridden;\n\tvar allowed = true;\n\tconsole.log('allowed:', actionName);\n\t_.every(OVERRIDES, function(method, key) {\n\t\tvar ok = true;\n\t\tvar re = OVERRIDES_REGEX[key];\n\t\tconsole.log('testing', actionName, 'with', key, ': ',re.test(actionName));\n\t\tif (re.test(actionName)) {\n\t\t\toverridden = true;\n\t\t\tvar r = method();\n\t\t\tif (r !== true) {\n\t\t\t\tok = false;\n\t\t\t\tallowed = r;\n\t\t\t}\n\t\t}\n\t\treturn ok;\n\t});\n\n\t// check if db overridden\n\tif (!overridden) {\n\t\tthrow new Meteor.Error('Not implemented', 'No database based acl yet');\n\t}\n\t// execute override or return db value accordingly\n\treturn allowed;\n};\n\nApp.component('acl').expose({\n\tregisterAction: function(actionName) {\n\t\tactionName = '';\n\t\t// save actionName to the database (on serverside)\n\t},\n\tisAllowed: isAllowed,\n\tifAllowed: function(actionName, method, wrap) {\n\t\tvar f = function() {\n\t\t\tvar allowed = isAllowed(actionName);\n\t\t\tif (allowed === true) { // if allowed, execute method\n\t\t\t\treturn method.apply(this, arguments);\n\t\t\t} else { // otherwise throw error\n\t\t\t\tthrow new Meteor.Error(allowed, 'Access denied: ' + allowed);\n\t\t\t}\n\t\t};\n\t\tif (!wrap) { // execute immediately\n\t\t\treturn f.apply(this);\n\t\t} else { // return method to be used\n\t\t\treturn f;\n\t\t}\n\t},\n\tallow: function(actionMatcher, method) {\n\t\tOVERRIDES[actionMatcher] = method;\n\t\tOVERRIDES_REGEX[actionMatcher] = new RegExp(actionMatcher);\n\t}\n});\n"]}