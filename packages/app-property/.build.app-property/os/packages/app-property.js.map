{"version":3,"file":"/packages/app-property.js","sources":["app-property/property_common.js","app-property/property_server.js"],"names":[],"mappings":";;;;;;;;AAAA,4B;AACA,2B;AACA,2D;AACA,W;AACA,a;AACA,wB;AACA,4B;AACA,U;AACA,0C;AACA,G;AACA,E;AACA,sD;AACA,6B;AACA,8B;AACA,mB;AACA,qB;AACA,E;AACA,c;AACA,E;;AAEA,gB;AACA,Y;AACA,c;AACA,W;AACA,iB;AACA,gC;AACA,oB;AACA,G;AACA,oC;AACA,E;;AAEA,yB;AACA,oB;AACA,e;AACA,E;AACA,E;;AAEA,kC;AACA,2D;AACA,oB;AACA,gB;AACA,yB;AACA,c;AACA,G;AACA,qB;AACA,oC;AACA,kC;AACA,iB;AACA,yD;AACA,kD;AACA,wB;AACA,+D;AACA,yB;AACA,W;AACA,I;AACA,iE;AACA,c;AACA,6B;AACA,uD;AACA,oC;AACA,O;AACA,W;AACA,6B;AACA,+B;AACA,kD;AACA,I;AACA,uB;AACA,I;AACA,Q;AACA,G;AACA,iC;AACA,+B;AACA,+C;AACA,6D;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC3EA,yC;AACA,yC;AACA,mD;AACA,G;;AAEA,yC;AACA,iC;AACA,iC;AACA,gC;AACA,G","sourcesContent":["App.property = function(k) {\n\tvar key = 'property.' + k;\n\tvar prop = App.property.PropertiesCollection.findOne(key);\n\tvar value;\n\tif (!prop) {\n\t\tif (Meteor.isClient) {\n\t\t\tvalue = Session.get(key);\n\t\t} else {\n\t\t\tthrow 'Cannot find App.property: ' + k;\n\t\t}\n\t}\n\tvar postProcessor = App.property.postProcessors[key];\n\tif (postProcessor && prop) {\n\t\tvalue = postProcessor(prop);\n\t} else if (prop) {\n\t\tvalue = prop.value;\n\t}\n\treturn value;\n};\n\nvar defaults = {\n\tkey: 'key',\n\t'default': 1,\n\ttitle: '',\n\tdescription: '',\n\tpostProcessor: function(prop) {\n\t\treturn prop.value;\n\t},\n\tvalidate: function( /* prop */ ) {}\n};\n\nvar dummySubscription = {\n\tready: function() {\n\t\treturn false;\n\t}\n};\n\nApp.component('property').expose({\n\tPropertiesCollection: new Meteor.Collection('properties'),\n\tpostProcessors: [],\n\tvalidators: [],\n\tauthorized: function() {\n\t\treturn true;\n\t},\n\tset: function(obj) {\n\t\tobj = _.extend({}, defaults, obj);\n\t\tobj._id = 'property.' + obj.key;\n\t\tdelete obj.key;\n\t\tApp.property.postProcessors[obj._id] = obj.postProcess;\n\t\tApp.property.validators[obj._id] = obj.validate;\n\t\tvar set = function() {\n\t\t\tif (Meteor.isClient && !App.property.subscription.ready()) {\n\t\t\t\tsetTimeout(set, 100);\n\t\t\t\treturn;\n\t\t\t}\n\t\t\tvar prop = App.property.PropertiesCollection.findOne(obj._id);\n\t\t\tif (prop) {\n\t\t\t\t// console.log('update');\n\t\t\t\tApp.property.PropertiesCollection.update(obj._id, {\n\t\t\t\t\t$set: _.omit(obj, 'key', '_id')\n\t\t\t\t});\n\t\t\t} else {\n\t\t\t\t// console.log('insert');\n\t\t\t\tobj.value = obj['default'];\n\t\t\t\tApp.property.PropertiesCollection.insert(obj);\n\t\t\t}\n\t\t\t// console.log(obj);\n\t\t};\n\t\tset();\n\t},\n\tsubscription: dummySubscription,\n\tinitSubscription: function() {\n\t\t// console.warn('subscribing to properties');\n\t\tApp.property.subscription = Meteor.subscribe('properties');\n\t}\n});\n","Meteor.publish('properties', function() {\n\t// console.log('publishing properties');\n\treturn App.property.PropertiesCollection.find({});\n});\n\nApp.property.PropertiesCollection.allow({\n\tinsert: App.property.authorized,\n\tupdate: App.property.authorized,\n\tremove: App.property.authorized\n});\n"]}