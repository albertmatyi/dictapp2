{"version":3,"file":"/packages/app-item.js","sources":["app-item/item_common.js","app-item/item_server.js"],"names":[],"mappings":";;;;;;;;AAAA,8B;AACA,4C;AACA,2B;AACA,iB;AACA,6C;AACA,gB;AACA,uB;AACA,mD;AACA,G;;AAEA,e;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;ACZA,0C;AACA,8C;AACA,sB;AACA,sC;AACA,kC;AACA,mB;AACA,I;AACA,G;AACA,gD;AACA,2C;AACA,gB;AACA,gD;AACA,yC;AACA,sB;AACA,E;AACA,a;AACA,G;AACA,qC;AACA,gC;AACA,c;AACA,kC;AACA,S;AACA,I;AACA,G;;AAEA,mB;AACA,kC;AACA,4B;AACA,e;AACA,E;AACA,E;;AAEA,wB;AACA,kD;AACA,E;;AAEA,sC;AACA,2B;AACA,e;AACA,e;AACA,c;AACA,G;;AAEA,wC;AACA,6B;AACA,kD;;AAEA,4C;AACA,kB;AACA,iB;AACA,0B;AACA,+B;;AAEA,2C;;AAEA,S;AACA,S;AACA,G;AACA,E;;AAEA,uC;AACA,mB;AACA,4C;AACA,4B;AACA,iC;AACA,Y;AACA,I;AACA,S;AACA,S;AACA,G;AACA,E;;AAEA,gB;AACA,oC;AACA,kD;AACA,kB;AACA,kC;AACA,W;AACA,mC;AACA,I;AACA,G;AACA,Y;AACA,G;AACA,8B;AACA,kD;AACA,yC;AACA,U;AACA,8B;AACA,G;AACA,G;AACA,2B;AACA,kD;AACA,kC;AACA,G;AACA,G;AACA,uC;AACA,G","sourcesContent":["App.component('item').expose({\n\tcollection: new Meteor.Collection('items'),\n\tpathToRoot: function(id) {\n\t\tvar items = [];\n\t\tvar item = App.item.collection.findOne(id);\n\t\twhile (item) {\n\t\t\titems.unshift(item);\n\t\t\titem = App.item.collection.findOne(item.parent);\n\t\t}\n\n\t\treturn items;\n\t}\n});\n","Meteor.publish('items', function(parent) {\n\tconsole.log('publishing items for ', parent);\n\tparent = parent || 0;\n\t// console.log('publishing', parent);\n\treturn App.item.collection.find({\n\t\t// parent: parent\n\t});\n});\nMeteor.publish('item.pathToRoot', function(id) {\n\tconsole.log('publishing item.pathToRoot');\n\tvar sub = this;\n\tvar items = Meteor.call('item.pathToRoot', id);\n\tfor (var i = 0; i < items.length; i++) {\n\t\tsub.added(items[i]);\n\t}\n\tsub.ready();\n});\nMeteor.publish('item', function(id) {\n\tconsole.log('publishing item');\n\tid = id || 0;\n\treturn App.item.collection.find({\n\t\t_id: id\n\t});\n});\n\nvar timestampIt = {\n\t'insert': function(userId, doc) {\n\t\tdoc.updated = +new Date();\n\t\treturn false;\n\t}\n};\n\nvar allow = function() {\n\treturn App.acl.isAllowed('item.manage') === true;\n};\n\nApp.item.collection.deny(timestampIt);\nApp.item.collection.allow({\n\tinsert: allow,\n\tupdate: allow,\n\tremove: allow\n});\n\nvar saveNewItem = function(type, data) {\n\tvar timestamp = +new Date();\n\tvar day = moment(timestamp).format('YYYY/MM/DD');\n\n\tdata = _.pick(data, App.data[type].fields);\n\tdata.type = type;\n\tdata.date = day;\n\tdata.updated = timestamp;\n\tdata.userId = Meteor.userId();\n\n\tvar id = App.item.collection.insert(data);\n\n\treturn {\n\t\t_id: id\n\t};\n};\n\nvar updateItem = function(type, data) {\n\tvar id = data._id;\n\tdata = _.pick(data, App.data[type].fields);\n\tdata = _.omit(data, '_id');\n\tApp.item.collection.update(id, {\n\t\t$set: data\n\t});\n\treturn {\n\t\t_id: id\n\t};\n};\n\nMeteor.methods({\n\t'item.save': function(type, data) {\n\t\tif (App.acl.isAllowed('item.manage') === true) {\n\t\t\tif (data._id) {\n\t\t\t\treturn updateItem(type, data);\n\t\t\t} else {\n\t\t\t\treturn saveNewItem(type, data);\n\t\t\t}\n\t\t}\n\t\treturn {};\n\t},\n\t'item.remove': function(id) {\n\t\tif (App.acl.isAllowed('item.manage') === true) {\n\t\t\treturn App.item.collection.remove(id);\n\t\t} else {\n\t\t\tconsole.log('not allowed');\n\t\t}\n\t},\n\t'item.reset': function() {\n\t\tif (App.acl.isAllowed('item.manage') === true) {\n\t\t\tApp.item.collection.remove({});\n\t\t}\n\t},\n\t'item.pathToRoot': App.item.pathToRoot\n});\n"]}