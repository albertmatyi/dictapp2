{"version":3,"file":"/packages/app-i18n.js","sources":["app-i18n/i18n.html","app-i18n/i18n_ui.js","app-i18n/i18n_client.js","app-i18n/properties.js"],"names":[],"mappings":";;;;;;;;;AACA,6C;AACA,8F;AACA,kB;AACA,kB;AACA,qC;AACA,oC;AACA,oD;AACA,iB;AACA,sF;AACA,a;AACA,I;;AAEA,qC;AACA,8E;AACA,kB;AACA,kB;AACA,yB;AACA,0E;AACA,K;AACA,qB;AACA,a;AACA,4B;AACA,oD;AACA,c;AACA,I;;;;;;;;;;;;;;;;;;;ACzBA,uC;AACA,wB;AACA,sC;AACA,oC;AACA,wC;AACA,W;AACA,a;AACA,+D;AACA,K;AACA,K;AACA,E;AACA,G;;AAEA,8B;AACA,iC;AACA,qB;;AAEA,4B;AACA,iC;AACA,E;AACA,G;;AAEA,2B;AACA,6C;AACA,iB;AACA,0C;AACA,E;AACA,G;;AAEA,iD;AACA,yD;AACA,6C;AACA,G;;AAEA,+D;AACA,qD;AACA,G;;;;;;;;;;;;;;;;;;;ACpCA,iD;AACA,gD;AACA,wC;AACA,E;AACA,8B;AACA,kB;AACA,mC;AACA,wC;AACA,qD;AACA,yC;AACA,G;AACA,uB;AACA,sC;AACA,mC;AACA,G;AACA,2B;AACA,wC;AACA,G;AACA,iC;AACA,sC;AACA,8B;AACA,mB;AACA,G;AACA,c;AACA,G;AACA,0B;AACA,8C;AACA,iE;AACA,kB;AACA,G;AACA,gC;AACA,sC;AACA,oC;AACA,mC;AACA,G;AACA,mD;AACA,a;AACA,oC;AACA,G;AACA,iB;AACA,+C;AACA,U;AACA,qC;AACA,G;;AAEA,6C;AACA,a;AACA,6B;AACA,G;AACA,a;AACA,G;AACA,+C;AACA,a;AACA,e;AACA,G;AACA,oC;AACA,qE;AACA,yB;AACA,U;;AAEA,oC;AACA,G;AACA,E;AACA,G;;;;;;;;;;;;;;;;;;;AC/DA,kB;AACA,0B;AACA,wB;AACA,2B;AACA,iG;AACA,iC;AACA,sC;AACA,M;AACA,8B;AACA,yC;AACA,8B;AACA,oD;AACA,S;AACA,K;AACA,G","sourcesContent":["\nTemplate.__checkName(\"i18nLanguageSelector\");\nTemplate[\"i18nLanguageSelector\"] = new Template(\"Template.i18nLanguageSelector\", (function() {\n  var view = this;\n  return HTML.UL({\n    \"class\": \"i18n language-selector\"\n  }, \"\\n\t\t\", Blaze.Each(function() {\n    return Spacebars.call(view.lookup(\"languages\"));\n  }, function() {\n    return [ \"\\n\t\t\", Spacebars.include(view.lookupTemplate(\"i18nLanguage\")), \"\\n\t\t\" ];\n  }), \"\\n\t\");\n}));\n\nTemplate.__checkName(\"i18nLanguage\");\nTemplate[\"i18nLanguage\"] = new Template(\"Template.i18nLanguage\", (function() {\n  var view = this;\n  return HTML.LI({\n    \"class\": function() {\n      return [ \"language \", Spacebars.mustache(view.lookup(\"selected\")) ];\n    }\n  }, \"\\n\t\t\", HTML.A({\n    href: \"#\"\n  }, Blaze.View(function() {\n    return Spacebars.mustache(view.lookup(\"title\"));\n  })), \"\\n\t\");\n}));\n","Template.i18nLanguageSelector.helpers({\n\tlanguages: function() {\n\t\tvar langs = App.i18n.getLanguages();\n\t\tvar lang = App.i18n.getLanguage();\n\t\treturn _.map(langs, function(e, idx) {\n\t\t\treturn {\n\t\t\t\ttitle: e,\n\t\t\t\tselected: (lang ? lang === e : idx === 0) ? 'selected' : ''\n\t\t\t};\n\t\t});\n\t}\n});\n\nTemplate.i18nLanguage.events({\n\t'click .language': function(e) {\n\t\te.preventDefault();\n\n\t\tvar language = this.title;\n\t\tApp.i18n.setLanguage(language);\n\t}\n});\n\nMeteor.startup(function() {\n\tvar cookieVal = Cookie.get('i18n.language');\n\tif (cookieVal) {\n\t\tSession.set('i18n.language', cookieVal);\n\t}\n});\n\nTemplate.registerHelper('translate', function() {\n\tvar args = Array.prototype.slice.call(arguments, 0, -1);\n\treturn App.i18n.translate.apply(this, args);\n});\n\nTemplate.registerHelper('translateField', function(fieldName) {\n\treturn App.i18n.getTranslatedField(this, fieldName);\n});\n","var getTranslationFor = function(key, language) {\n\tvar langDict = App.i18n.translations[language];\n\treturn langDict ? langDict[key] : null;\n};\nApp.component('i18n').expose({\n\ttranslations: {},\n\tsetLanguage: function (language) {\n\t\tCookie.set('i18n.language', language);\n\t\tApp.eventBus.emit('i18n.languageChange', language);\n\t\tSession.set('i18n.language', language);\n\t},\n\tisActive: function() {\n\t\tvar langs = App.i18n.getLanguages();\n\t\treturn langs && langs.length > 1;\n\t},\n\tgetLanguages: function() {\n\t\treturn App.property('i18n.languages');\n\t},\n\tgetDefaultLanguage: function() {\n\t\tvar langs = App.i18n.getLanguages();\n\t\tif (langs && langs.length) {\n\t\t\treturn langs[0];\n\t\t}\n\t\treturn null;\n\t},\n\tgetLanguage: function() {\n\t\tvar defLang = App.i18n.getDefaultLanguage();\n\t\tvar language = Session.get('i18n.language') || defLang || 'de';\n\t\treturn language;\n\t},\n\tisDefaultLanguage: function() {\n\t\tvar langs = App.i18n.getLanguages();\n\t\tvar lang = App.i18n.getLanguage();\n\t\treturn langs.indexOf(lang) === 0;\n\t},\n\ttranslate: function(key, defaultValue, language) {\n\t\tif (!key) {\n\t\t\tconsole.warn('No key specified');\n\t\t}\n\t\tif (language) {\n\t\t\tconsole.warn('Overriding context language');\n\t\t} else {\n\t\t\tlanguage = App.i18n.getLanguage();\n\t\t}\n\n\t\tvar val = getTranslationFor(key, language);\n\t\tif (!val) {\n\t\t\tval = defaultValue || key;\n\t\t}\n\t\treturn val;\n\t},\n\tgetTranslatedField: function(obj, fieldName) {\n\t\tif (!obj) {\n\t\t\treturn null;\n\t\t}\n\t\tvar lang = App.i18n.getLanguage();\n\t\tif (App.i18n.isDefaultLanguage() || !obj.i18n || !obj.i18n[lang]) {\n\t\t\treturn obj[fieldName];\n\t\t} else {\n\n\t\t\treturn obj.i18n[lang][fieldName];\n\t\t}\n\t}\n});\n","App.property.set({\n    key: 'i18n.languages',\n    'default': '[\"en\"]',\n    title: 'App languages',\n    description: 'The languages to be used in the application. The first one is the default one',\n    postProcess: function(prop) {\n        return JSON.parse(prop.value);\n    },\n    validate: function(prop) {\n        var arr = JSON.parse(prop.value);\n        if (!_.isArray(arr)) {\n            throw 'Invalid language array provided';\n        }\n    }\n});\n"]}