{"version":3,"file":"/packages/emitter.js","sources":["emitter/emitter.client.js"],"names":[],"mappings":";;;;;;;;AAAA,2B;;AAEA,+D;AACA,wC;AACA,0D;AACA,G;;AAEA,uB;AACA,2B;;AAEA,oB;;AAEA,wC;AACA,+C;AACA,wD;AACA,2B;AACA,oC;AACA,yD;AACA,+B;AACA,kC;AACA,Q;AACA,K;AACA,2B;AACA,I;;AAEA,8F;AACA,yC;AACA,W;AACA,8B;AACA,+B;AACA,Y;AACA,8B;AACA,+B;AACA,K;AACA,I;;AAEA,a;AACA,uD;AACA,6B;AACA,yD;AACA,sD;AACA,yD;AACA,M;AACA,0D;AACA,qD;AACA,yD;AACA,+B;AACA,kC;AACA,S;AACA,M;AACA,wC;AACA,uD;AACA,mC;AACA,0D;AACA,M;AACA,wD;AACA,0C;AACA,oC;AACA,gC;AACA,mB;AACA,yB;AACA,gB;AACA,2E;AACA,S;AACA,O;AACA,wE;AACA,M;AACA,I;;AAEA,oB;AACA,2B;AACA,+B;AACA,mC;;AAEA,4B;AACA,qB;AACA,yB;;AAEA,mC;;AAEA,a;AACA,E","sourcesContent":["EventEmitter = function() {\n\n  // Check that the user uses \"new\" keyword for api consistency\n  if (!(this instanceof EventEmitter)) {\n    throw new Error('EventEmitter missing \"new\" keyword');\n  }\n\n  // Use the jQuery api\n  var eventEmitter = $({});\n\n  var fCatalog = {};\n\n  // Limit scope by wrapping on and emit\n  var getWrappedCallback = function(callback) {\n    var wrappedCallback = fCatalog[callback._emitterId];\n    if (!wrappedCallback) {\n      wrappedCallback = function() {\n        var args = Array.prototype.slice.call(arguments);\n        var evt = args.shift();\n        callback.apply(evt, args);\n      };\n    }\n    return wrappedCallback;\n  };\n\n  // put an id on the wrapper, so we can look it up later on `off` or reuse it on another `on`\n  var markCallback = function(callback) {\n    var id;\n    if (callback._emitterId) {\n      id = callback._emitterId;\n    } else {\n      id = Math.random() + '';\n      callback._emitterId = id;\n    }\n  };\n\n  var api = {\n    on: function eventEmitter_on(eventName, callback) {\n      markCallback(callback);\n      var wrappedCallback = getWrappedCallback(callback);\n      fCatalog[callback._emitterId] = wrappedCallback;\n      return eventEmitter.on(eventName, wrappedCallback);\n    },\n    once: function eventEmitter_one(eventName, callback) {\n      return eventEmitter.one(eventName, function() {\n        var args = Array.prototype.slice.call(arguments);\n        var evt = args.shift();\n        callback.apply(evt, args);\n      });\n    },\n    emit: function eventEmitter_emit() {\n      var args = Array.prototype.slice.call(arguments);\n      var eventName = args.shift();\n      return eventEmitter.triggerHandler(eventName, args);\n    },\n    off: function eventEmitter_off(eventName, handler) {\n      if (typeof handler === 'function') {\n        var id = handler._emitterId;\n        var catF = fCatalog[id];\n        if (catF) {\n          handler = catF;\n        } else {\n          console.warn('Function', handler, 'was not found to be removed');\n        }\n      }\n      return eventEmitter.off.apply(eventEmitter, [eventName, handler]);\n    },\n  };\n\n  // Add api helpers\n  api.addListener = api.on;\n  api.removeListener = api.off;\n  api.removeAllListeners = api.off;\n\n  // Add jquery like helpers\n  api.one = api.once;\n  api.trigger = api.emit;\n\n  api._eventEmitter = eventEmitter;\n\n  return api;\n};\n"]}